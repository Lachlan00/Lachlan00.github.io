xmax <- 150.232476
setwd("~/Development/other_people_help/Katrin")
load('studyperiod_na_tod.RData')
df_test <- df
df_test[is.na(df_test)] <- 0
localTime <- as.POSIXlt(df_test$datetimeUTC, tz='Australia/Adelaide')
localTime <- strftime(localTime, format="%H:%M:%S")
localTime <- as.POSIXct(localTime, format="%H:%M:%S")
plot(localTime, as.factor(df_test$ToD), col=as.factor(df_test$ToD), xlab="Time", ylab="ToD Category")
-1 >= -2
0 >= -2
1 >= -2
0 <= 2
summary(df$Latitude)
summary(df$Longitude)
plot(as.Date(df$datetimeUTC), rep.int(1, length(df$datetimeUTC)))
plot(df$datetimeUTC, rep.int(1, length(df$datetimeUTC)))
getSunlightTimes(date=as.Date(dt), lat=NA, lon=NA)
library(suncalc)
getSunlightTimes(date=as.Date(dt), lat=NA, lon=NA)
dt <- df$datetimeUTC[4]
getSunlightTimes(date=as.Date(dt), lat=NA, lon=NA)
summary(df$Latitude)
sum(is.na(df$Latitude))
sum(is.na(df$Longitude))
# Check data
df_test <- head(df, 3000)
localTime <- as.POSIXlt(df_test$datetimeUTC, tz='Australia/Adelaide')
localTime <- strftime(localTime, format="%H:%M:%S")
localTime <- as.POSIXct(localTime, format="%H:%M:%S")
plot(localTime, as.factor(df_test$ToD), col=as.factor(df_test$ToD), xlab="Time", ylab="ToD Category")
dt
as.Date(dt)
getSunlightTimes(dt, -42, 140)
sun <- getSunlightTimes(date=as.Date(dt), lat=lat, lon=lon)
lat <- df$Latitude
lon <- df$Longitude
lat <- df$Latitude[4]
lon <- df$Longitude[4]
sun <- getSunlightTimes(date=as.Date(dt), lat=lat, lon=lon)
(as.numeric(dt - sun$dawn) >= 0 & as.numeric(dt - sun$dawn) <= 4)
(as.numeric(dt - sun$dusk) >= -4 & as.numeric(dt - sun$dusk)
)
dt
su
sun
(as.numeric(dt - sun$solarNoon) >= -2 & as.numeric(dt - sun$solarNoon)
)
(as.numeric(dt - sun$dusk) >= -4 & as.numeric(dt - sun$dusk) <= 0)
(as.numeric(dt - sun$dawn) >= 0 & as.numeric(dt - sun$dawn) <= 4)
(as.numeric(dt - sun$dawn) >= 0 & as.numeric(dt - sun$dawn) <= 4)
(as.numeric(dt - sun$dusk) >= -4 & as.numeric(dt - sun$dusk) <= 0)
dt
(as.numeric(dt - sun$solarNoon) >= -2 & as.numeric(dt - sun$solarNoon)
)
(as.numeric(dt - sun$solarNoon) >= -2 & as.numeric(dt - sun$solarNoon)
)
(as.numeric(dt - sun$solarNoon) >= -2 & as.numeric(dt - sun$solarNoon) <= 2)
(as.numeric(dt - sun$dusk) >= -4 & as.numeric(dt - sun$dusk)
<= 0
)
(as.numeric(dt - sun$solarNoon)
)
(as.numeric(dt - sun$dawn)
)
dt
dt
sun$dawn
help(suncalc)
??suncalc
as.numeric(dt - sun$dusk)
sun$solarNoon
# make subset
df <- head(df, 10000)
"""
Dataframe contains datetime (POSIXct), Latitude and Longitude columns.
Conditions for data
1: First 4 hours after dawn
2: 2 hours before and after sun is at its peak position
3: 4 hours before dusk
"""
library(suncalc)
setwd("~/Development/other_people_help/Katrin")
df <- read.csv("studyperiod_na.csv")
# clean data
df$X <- NULL
df$date <- NULL
df$datetime <- NULL
df$datetimeACST <- NULL
# Convert the datetime column to POSIXct datetime data type
df$datetimeUTC <- as.POSIXct(df$datetimeUTC, tz='UTC')
calcToD <- function(dt, lat, lon){
# so this is afunction to get the time of day categories
# let's get the suntimes
sun <- getSunlightTimes(date=as.Date(dt), lat=lat, lon=lon)
if (as.numeric(dt - sun$sunrise) >= 0 & as.numeric(dt - sun$sunrise) <= 4){
ToD <- 1
} else if (as.numeric(dt - sun$solarNoon) >= -2 & as.numeric(dt - sun$solarNoon) <= 2){
ToD <- 2
} else if (as.numeric(dt - sun$sunset) >= -2 & as.numeric(dt - sun$sunset) <= 0){
ToD <- 3
} else {
ToD <- 0
}
return(ToD)
}
library(suncalc)
setwd("~/Development/other_people_help/Katrin")
df <- read.csv("studyperiod_na.csv")
# clean data
df$X <- NULL
df$date <- NULL
df$datetime <- NULL
df$datetimeACST <- NULL
# Convert the datetime column to POSIXct datetime data type
df$datetimeUTC <- as.POSIXct(df$datetimeUTC, tz='UTC')
calcToD <- function(dt, lat, lon){
# so this is afunction to get the time of day categories
# let's get the suntimes
sun <- getSunlightTimes(date=as.Date(dt), lat=lat, lon=lon)
if (as.numeric(dt - sun$sunrise) >= 0 & as.numeric(dt - sun$sunrise) <= 4){
ToD <- 1
} else if (as.numeric(dt - sun$solarNoon) >= -2 & as.numeric(dt - sun$solarNoon) <= 2){
ToD <- 2
} else if (as.numeric(dt - sun$sunset) >= -2 & as.numeric(dt - sun$sunset) <= 0){
ToD <- 3
} else {
ToD <- 0
}
return(ToD)
}
# make subset for testing
df_test <- head(df, 10000)
df_test
df_test['datetimeUTC']
df_test['datetimeUTC', 'lat', 'lon']
df_test['datetimeUTC', 'Lattitude', 'Longitude']
df_test[-1]
df_test[c('Latitude')]
df_test[c('date','Latitude','Longitude')]
df_test[c('date','Latitude','Longitude')]
#get start time
t1.1 <- Sys.time()
#run yor code
ToD <- mapply(calcToD, df_test$datetimeUTC, df_test$lat, df_test$lon)
#get end time
t1.2 <- Sys.time()
t.l <- difftime(t1.2,t1.1, units="secs")
#get start time
t1.1 <- Sys.time()
#run yor code
ToD <- mapply(calcToD, df_test$datetimeUTC, df_test$Latitude, df_test$Longitude)
#get end time
t1.2 <- Sys.time()
t.l <- difftime(t1.2,t1.1, units="secs")
t.1
t.l <- difftime(t1.2,t1.1, units="secs")
t.2-t.1
t1.2-t1.1
#get start time
t1<-Sys.time()
ddata <- df_test[c('datetimeUTC','Latitude','Longitude')]
#keep posix format
datetime <- ddata$datetimeUTC
#change to date for sunlight function
ddata$date <- as.Date(ddata$date)
#get times
sun <- getSunlightTimes(data=ddatas)
#create variables
ddata$sinceSunrise <- as.numeric(datetime-sun$sunrise)/3600 #this is in seconds, so you have to divide by 3600 to get hours
ddata$sinceSolarNoon <- as.numeric(datetime-sun$solarNoon)/3600
ddata$sinceSunset <- as.numeric(datetime-sun$sunset)/3600
#create ToD
ddata$ToD <- 0
ddata$ToD[ddata$sinceSunrise > 0 & ddata$sinceSunrise <= 4] <- 1
ddata$ToD[ddata$sinceSolarNoon >= -2 & ddata$sinceSolarNoon <= 2] <- 2
ddata$ToD[ddata$sinceSunset >= -4 & ddata$sinceSunset <= 0] <- 3
#get end time
t2<-Sys.time()
t.s <- difftime(t2,t1,units="secs")
t.s <- t2-t1
t.s
# make subset for testing
# df_test <- head(df, 10000)
df_test <- df # just using df_test as the variable so I don't have to redit the code
#get start time
t1<-Sys.time()
ddata <- df_test[c('datetimeUTC','Latitude','Longitude')]
#keep posix format
datetime <- ddata$datetimeUTC
#change to date for sunlight function
ddata$date <- as.Date(ddata$date)
#get times
sun <- getSunlightTimes(data=ddatas)
#create variables
ddata$sinceSunrise <- as.numeric(datetime-sun$sunrise)/3600 #this is in seconds, so you have to divide by 3600 to get hours
ddata$sinceSolarNoon <- as.numeric(datetime-sun$solarNoon)/3600
ddata$sinceSunset <- as.numeric(datetime-sun$sunset)/3600
#create ToD
ddata$ToD <- 0
ddata$ToD[ddata$sinceSunrise > 0 & ddata$sinceSunrise <= 4] <- 1
ddata$ToD[ddata$sinceSolarNoon >= -2 & ddata$sinceSolarNoon <= 2] <- 2
ddata$ToD[ddata$sinceSunset >= -4 & ddata$sinceSunset <= 0] <- 3
#get end time
t2<-Sys.time()
# make subset for testing
df_test <- head(df, 10000)
#get start time
t1<-Sys.time()
ddata <- df_test[c('datetimeUTC','Latitude','Longitude')]
#keep posix format
datetime <- ddata$datetimeUTC
#change to date for sunlight function
ddata$date <- as.Date(ddata$date)
#get times
sun <- getSunlightTimes(data=ddata)
#create variables
ddata$sinceSunrise <- as.numeric(datetime-sun$sunrise)/3600 #this is in seconds, so you have to divide by 3600 to get hours
ddata$sinceSolarNoon <- as.numeric(datetime-sun$solarNoon)/3600
ddata$sinceSunset <- as.numeric(datetime-sun$sunset)/3600
#create ToD
ddata$ToD <- 0
ddata$ToD[ddata$sinceSunrise > 0 & ddata$sinceSunrise <= 4] <- 1
ddata$ToD[ddata$sinceSolarNoon >= -2 & ddata$sinceSolarNoon <= 2] <- 2
ddata$ToD[ddata$sinceSunset >= -4 & ddata$sinceSunset <= 0] <- 3
#get end time
t2<-Sys.time()
t.s <- t2-t1
ddata <- df_test[c('datetimeUTC','Latitude','Longitude')]
#keep posix format
datetime <- ddata$datetimeUTC
#change to date for sunlight function
ddata$date <- as.Date(ddata$date)
#get times
sun <- getSunlightTimes(data=ddata)
ddata <- ddata[c('date', 'Latitude', 'Longitude')]
#get times
sun <- getSunlightTimes(data=ddata)
ddata$lon <- ddata$Longitude
ddata$lat <- ddata$Latitude
ddata <- ddata[c('date', 'lat', 'lon')]
#get times
sun <- getSunlightTimes(data=ddata)
#get start time
t1.1 <- Sys.time()
#run yor code
ToD <- mapply(calcToD, df_test$datetimeUTC, df_test$Latitude, df_test$Longitude)
#get end time
t1.2 <- Sys.time()
t.l <- t2.1-t1.1
#######################################################
## Simple version
#######################################################
#get start time
t1<-Sys.time()
ddata <- df_test[c('datetimeUTC','Latitude','Longitude')]
#keep posix format
datetime <- ddata$datetimeUTC
#change to date for sunlight function
ddata$date <- as.Date(ddata$date)
ddata$lon <- ddata$Longitude
ddata$lat <- ddata$Latitude
ddata <- ddata[c('date', 'lat', 'lon')]
#get times
sun <- getSunlightTimes(data=ddata)
#create variables
ddata$sinceSunrise <- as.numeric(datetime-sun$sunrise)/3600 #this is in seconds, so you have to divide by 3600 to get hours
ddata$sinceSolarNoon <- as.numeric(datetime-sun$solarNoon)/3600
ddata$sinceSunset <- as.numeric(datetime-sun$sunset)/3600
#create ToD
ddata$ToD <- 0
ddata$ToD[ddata$sinceSunrise > 0 & ddata$sinceSunrise <= 4] <- 1
ddata$ToD[ddata$sinceSolarNoon >= -2 & ddata$sinceSolarNoon <= 2] <- 2
ddata$ToD[ddata$sinceSunset >= -4 & ddata$sinceSunset <= 0] <- 3
#get end time
t2<-Sys.time()
t.s <- t2-t1
t.s
