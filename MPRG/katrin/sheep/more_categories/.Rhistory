# Load libraries
library(suncalc)
# setwd and load in dataset
setwd("~/Development/other_people_help/Katrin/sheep/more_categories")
load("heatwave1_na_ToD.RData")
# renaming dataframe for more readable code
df <- heatwave1_na
# removing uneeded columns
df$timeofday <- NULL
df <- head(df, 5000) # subset for testing
# Testing original 3 category function
calcToD_3 <- function(dt, lat, lon){
sun <- getSunlightTimes(date=as.Date(dt), lat=lat, lon=lon)
if (as.numeric(difftime(dt, sun$dawn, units='minutes')) >= 0 & as.numeric(difftime(dt, sun$dawn, units='minutes')) <= 4*60){
ToD <- 1
} else if (as.numeric(difftime(dt, sun$solarNoon, units='minutes')) >= -2*60 & as.numeric(difftime(dt, sun$solarNoon, units='minutes')) <= 2*60){
ToD <- 2
} else if (as.numeric(difftime(dt, sun$dusk, units='minutes')) >= -4*60 & as.numeric(difftime(dt, sun$dusk, units='minutes')) <= 0){
ToD <- 3
} else {
ToD <- NA
}
return(ToD)
}
# run 3 category test
df$ToD <- NULL
df$ToD <- mapply(calcToD_3, df$datetime, df$Latitude, df$Longitude)
df3 <- df
# Testing original 3 category function
calcToD_3 <- function(dt, lat, lon){
sun <- getSunlightTimes(date=as.Date(dt), lat=lat, lon=lon)
if (as.numeric(difftime(dt, sun$dawn, units='mins')) >= 0 & as.numeric(difftime(dt, sun$dawn, units='mins')) <= 4*60){
ToD <- 1
} else if (as.numeric(difftime(dt, sun$solarNoon, units='mins')) >= -2*60 & as.numeric(difftime(dt, sun$solarNoon, units='mins')) <= 2*60){
ToD <- 2
} else if (as.numeric(difftime(dt, sun$dusk, units='mins')) >= -4*60 & as.numeric(difftime(dt, sun$dusk, units='mins')) <= 0){
ToD <- 3
} else {
ToD <- NA
}
return(ToD)
}
# run 3 category test
df$ToD <- NULL
df$ToD <- mapply(calcToD_3, df$datetime, df$Latitude, df$Longitude)
df3 <- df
# Visual check function
visual_check <- function(df, title){
localTime <- df$datetime.local
localTime <- strftime(localTime, format="%H:%M:%S")
localTime <- as.POSIXct(localTime, format="%H:%M:%S")
plot(localTime, as.factor(df$ToD), col=as.factor(df$ToD), xlab="Time", ylab="ToD Category", main=title)
}
# run check
visual_check(df3, "3-categories")
View(df3)
View(df)
df3$ToD <- as.factor(df$ToD)
# run check
visual_check(df3, "3-categories")
dt <- df$datetime[185]
dt
lat <- df$lat[185]
lon <- df$lon[185]
sun <- getSunlightTimes(date=as.Date(dt), lat=lat, lon=lon)
getSunlightTimes(date=as.Date(dt), lat=lat, lon=lon)
lat
lon
lon <- df$Longitude[185]
lat <- df$Latitude[185]
sun <- getSunlightTimes(date=as.Date(dt), lat=lat, lon=lon)
sun
dt
sun$dawn
difftime(dt, sun$dawn, units='mins')
dt
# Load libraries
library(suncalc)
# setwd and load in dataset
setwd("~/Development/other_people_help/Katrin/sheep/more_categories")
load("heatwave1_na_ToD.RData")
# renaming dataframe for more readable code
df <- heatwave1_na
# removing uneeded columns
df$timeofday <- NULL
df <- head(df, 5000) # subset for testing
# Testing original 3 category function
calcToD_3 <- function(dt, dtLocal, lat, lon){
sun <- getSunlightTimes(date=as.Date(dtLocal), lat=lat, lon=lon)
if (as.numeric(difftime(dt, sun$dawn, units='mins')) >= 0 & as.numeric(difftime(dt, sun$dawn, units='mins')) <= 4*60){
ToD <- 1
} else if (as.numeric(difftime(dt, sun$solarNoon, units='mins')) >= -2*60 & as.numeric(difftime(dt, sun$solarNoon, units='mins')) <= 2*60){
ToD <- 2
} else if (as.numeric(difftime(dt, sun$dusk, units='mins')) >= -4*60 & as.numeric(difftime(dt, sun$dusk, units='mins')) <= 0){
ToD <- 3
} else {
ToD <- NA
}
return(ToD)
}
# run 3 category test
df$ToD <- NULL
df$ToD <- mapply(calcToD_3, df$datetime, df$datetime.local, df$Latitude, df$Longitude)
df3 <- df
# Visual check function
visual_check <- function(df, title){
localTime <- df$datetime.local
localTime <- strftime(localTime, format="%H:%M:%S")
localTime <- as.POSIXct(localTime, format="%H:%M:%S")
plot(localTime, as.factor(df$ToD), col=as.factor(df$ToD), xlab="Time", ylab="ToD Category", main=title)
}
# run check
visual_check(df3, "3-categories")
dt <- df$datetime[185]
lon <- df$Longitude[185]
lat <- df$Latitude[185]
dt
sun <- getSunlightTimes(date=as.Date(dt), lat=lat, lon=lon)
sun$dawn
sun$solarNoon
sun$dusk
24*60
help(sunCalc)
help(suncalc)
??suncalc
dt
dt_locl <- df$datetime.local[185]
dt_local
dt_locl
sun_lc = <- getSunlightTimes(date=as.Date(dt_locl), lat=lat, lon=lon)
sun_lc <- getSunlightTimes(date=as.Date(dt_locl), lat=lat, lon=lon)
sun_lc
sun
dt
dt_locl
dt
sun$dawn
difftime(dt, sun$dawn, units='hours')
dt.local <- df$datetime.local[185]
dt.local
dt.local2 <- dt.local
dt.local <- as.POSIXct(dt.local, tz='UTC')
dt.local
attr(dt.local, "tzone") <- "UTC"
dt.local
library(lubridate)
dt.local <- dt.local2
dt.local
dt.local <- force_tz(dt.local, tzone = "UTC")
dt.local
dt.local2
# Load libraries
library(suncalc)
library(lubridate)
# setwd and load in dataset
setwd("~/Development/other_people_help/Katrin/sheep/more_categories")
load("heatwave1_na_ToD.RData")
# renaming dataframe for more readable code
df <- heatwave1_na
# removing uneeded columns
df$timeofday <- NULL
df <- head(df, 5000) # subset for testing
# Testing original 3 category function
calcToD_3 <- function(dt, dt.local, lat, lon){
dt.local <- force_tz(dt.local, tzone = "UTC")
sun <- getSunlightTimes(date=as.Date(dt.local), lat=lat, lon=lon)
if (as.numeric(difftime(dt, sun$dawn, units='hours')) >= 0 & as.numeric(difftime(dt, sun$dawn, units='hours')) <= 4){
ToD <- 1
} else if (as.numeric(difftime(dt, sun$solarNoon, units='hours')) >= -2 & as.numeric(difftime(dt, sun$solarNoon, units='hours')) <= 2){
ToD <- 2
} else if (as.numeric(difftime(dt, sun$dusk, units='hours')) >= -4 & as.numeric(difftime(dt, sun$dusk, units='hours')) <= 0){
ToD <- 3
} else {
ToD <- NA
}
return(ToD)
}
# run 3 category test
df$ToD <- NULL
df$ToD <- mapply(calcToD_3, df$datetime, df$Latitude, df$Longitude)
df3 <- df
df$ToD <- NULL
df$ToD <- mapply(calcToD_3, df$datetime, df$datetime.local, df$Latitude, df$Longitude)
df3 <- df
# Visual check function
visual_check <- function(df, title){
localTime <- df$datetime.local
localTime <- strftime(localTime, format="%H:%M:%S")
localTime <- as.POSIXct(localTime, format="%H:%M:%S")
plot(localTime, as.factor(df$ToD), col=as.factor(df$ToD), xlab="Time", ylab="ToD Category", main=title)
}
# run check
visual_check(df3, "3-categories")
dt <- df$datetime.local[185]
lat <- df$Latitude[185]
lon <- df$Longitude[185]
sun <- getSunlightTimes(date=as.Date(dt), lat=lat, lon=lon)
dt
as.Date(dt)
sun
dt <- df$datetime[185]
sun <- getSunlightTimes(date=as.Date(dt), lat=lat, lon=lon)
sun
dt
as.Date(dt)
getSunlightTimes(dt, lat=lat, lon=lon)
getSunlightTimes("2018-01-27", lat=lat, lon=lon)
getSunlightTimes(as.date("2018-01-27"), lat=lat, lon=lon)
getSunlightTimes(as.Date("2018-01-27"), lat=lat, lon=lon)
dt
dt - sun$date
dt
sun$date
difftime(dt, sun$dawn, units='hours')
sun <- getSunlightTimes(date=as.Date(dt), lat=lat, lon=lon)
sun
if (difftime(dt, sun$dawn, units='hours') > 24){
sun <- getSunlightTimes(date=as.Date(dt)+1, lat=lat, lon=lon)
}
sun
# Load libraries
library(suncalc)
library(lubridate)
# setwd and load in dataset
setwd("~/Development/other_people_help/Katrin/sheep/more_categories")
load("heatwave1_na_ToD.RData")
# renaming dataframe for more readable code
df <- heatwave1_na
# removing uneeded columns
df$timeofday <- NULL
df <- head(df, 5000) # subset for testing
# Testing original 3 category function
calcToD_3 <- function(dt, lat, lon){
sun <- getSunlightTimes(date=as.Date(dt), lat=lat, lon=lon)
if (difftime(dt, sun$dawn, units='hours') > 24){
sun <- getSunlightTimes(date=as.Date(dt)+1, lat=lat, lon=lon)
}
if (as.numeric(difftime(dt, sun$dawn, units='hours')) >= 0 & as.numeric(difftime(dt, sun$dawn, units='hours')) <= 4){
ToD <- 1
} else if (as.numeric(difftime(dt, sun$solarNoon, units='hours')) >= -2 & as.numeric(difftime(dt, sun$solarNoon, units='hours')) <= 2){
ToD <- 2
} else if (as.numeric(difftime(dt, sun$dusk, units='hours')) >= -4 & as.numeric(difftime(dt, sun$dusk, units='hours')) <= 0){
ToD <- 3
} else {
ToD <- NA
}
return(ToD)
}
# run 3 category test
df$ToD <- NULL
df$ToD <- mapply(calcToD_3, df$datetime, df$Latitude, df$Longitude)
df3 <- df
# works so let's make the 5 category function
calcToD_5 <- function(dt, lat, lon){
sun <- getSunlightTimes(date=as.Date(dt), lat=lat, lon=lon)
if (difftime(dt, sun$dawn, units='hours') > 24){
sun <- getSunlightTimes(date=as.Date(dt)+1, lat=lat, lon=lon)
}
if (as.numeric(difftime(dt, sun$dawn, units='hours')) <= 0 & as.numeric(difftime(dt, sun$dawn, units='hours')) >= -4){
ToD <- 1
} else if (as.numeric(difftime(dt, sun$dawn, units='hours')) >= 0 & as.numeric(difftime(dt, sun$dawn, units='hours')) <= 4){
ToD <- 2
} else if (as.numeric(difftime(dt, sun$solarNoon, units='hours')) >= -2 & as.numeric(difftime(dt, sun$solarNoon, units='hours')) <= 2){
ToD <- 3
} else if (as.numeric(difftime(dt, sun$dusk, units='hours')) >= -4 & as.numeric(difftime(dt, sun$dusk, units='hours')) <= 0){
ToD <- 4
} else if (as.numeric(difftime(dt, sun$dusk, units='hours')) <= 4 & as.numeric(difftime(dt, sun$dusk, units='hours')) >= 0){
ToD <- 5
} else {
ToD <- NA
}
return(ToD)
}
# run 5 category test
df$ToD <- NULL
df$ToD <- mapply(calcToD_5, df$datetime, df$Latitude, df$Longitude)
df5 <- df
# Visual check function
visual_check <- function(df, title){
localTime <- df$datetime.local
localTime <- strftime(localTime, format="%H:%M:%S")
localTime <- as.POSIXct(localTime, format="%H:%M:%S")
plot(localTime, as.factor(df$ToD), col=as.factor(df$ToD), xlab="Time", ylab="ToD Category", main=title)
}
# run check
visual_check(df3, "3-categories")
visual_check(df5, "5-categories")
?force_tz
# Visual check function
visual_check <- function(df, title){
localTime <- df$datetime.local
localTime <- force_tz(loacTime, tzone='UTC')
localTime <- strftime(localTime, format="%H:%M:%S")
localTime <- as.POSIXct(localTime, format="%H:%M:%S")
plot(localTime, as.factor(df$ToD), col=as.factor(df$ToD), xlab="Time", ylab="ToD Category", main=title)
}
# run check
visual_check(df3, "3-categories")
visual_check(df5, "5-categories")
# Visual check function
visual_check <- function(df, title){
localTime <- df$datetime.local
localTime <- force_tz(localTime, tzone='UTC')
localTime <- strftime(localTime, format="%H:%M:%S")
localTime <- as.POSIXct(localTime, format="%H:%M:%S")
plot(localTime, as.factor(df$ToD), col=as.factor(df$ToD), xlab="Time", ylab="ToD Category", main=title)
}
# run check
visual_check(df3, "3-categories")
visual_check(df5, "5-categories")
View(df5)
dt <- df$datetime[177]
lon <- df$Longitude[177]
lat <- df$Latitude[177]
sun <- getSunlightTimes(date=as.Date(dt), lat=lat, lon=lon)
sun
dt
difftime(dt, sun$dawn, units='hours')
# works so let's make the 5 category function
calcToD_5 <- function(dt, lat, lon){
sun <- getSunlightTimes(date=as.Date(dt), lat=lat, lon=lon)
if (difftime(dt, sun$dawn, units='hours') > 20){
sun <- getSunlightTimes(date=as.Date(dt)+1, lat=lat, lon=lon)
}
if (as.numeric(difftime(dt, sun$dawn, units='hours')) <= 0 & as.numeric(difftime(dt, sun$dawn, units='hours')) >= -4){
ToD <- 1
} else if (as.numeric(difftime(dt, sun$dawn, units='hours')) >= 0 & as.numeric(difftime(dt, sun$dawn, units='hours')) <= 4){
ToD <- 2
} else if (as.numeric(difftime(dt, sun$solarNoon, units='hours')) >= -2 & as.numeric(difftime(dt, sun$solarNoon, units='hours')) <= 2){
ToD <- 3
} else if (as.numeric(difftime(dt, sun$dusk, units='hours')) >= -4 & as.numeric(difftime(dt, sun$dusk, units='hours')) <= 0){
ToD <- 4
} else if (as.numeric(difftime(dt, sun$dusk, units='hours')) <= 4 & as.numeric(difftime(dt, sun$dusk, units='hours')) >= 0){
ToD <- 5
} else {
ToD <- NA
}
return(ToD)
}
# run 5 category test
df$ToD <- NULL
df$ToD <- mapply(calcToD_5, df$datetime, df$Latitude, df$Longitude)
df5 <- df
visual_check(df5, "5-categories")
# Load libraries
library(suncalc)
library(lubridate)
# setwd and load in dataset
setwd("~/Development/other_people_help/Katrin/sheep/more_categories")
load("heatwave1_na_ToD.RData")
# renaming dataframe for more readable code
df <- heatwave1_na
# removing uneeded columns
df$timeofday <- NULL
df <- head(df, 5000) # subset for testing
# Testing original 3 category function
calcToD_3 <- function(dt, lat, lon){
sun <- getSunlightTimes(date=as.Date(dt), lat=lat, lon=lon)
if (difftime(dt, sun$dawn, units='hours') > 24){
sun <- getSunlightTimes(date=as.Date(dt)+1, lat=lat, lon=lon)
}
if (as.numeric(difftime(dt, sun$dawn, units='hours')) >= 0 & as.numeric(difftime(dt, sun$dawn, units='hours')) <= 4){
ToD <- 1
} else if (as.numeric(difftime(dt, sun$solarNoon, units='hours')) >= -2 & as.numeric(difftime(dt, sun$solarNoon, units='hours')) <= 2){
ToD <- 2
} else if (as.numeric(difftime(dt, sun$dusk, units='hours')) >= -4 & as.numeric(difftime(dt, sun$dusk, units='hours')) <= 0){
ToD <- 3
} else {
ToD <- NA
}
return(ToD)
}
# run 3 category test
df$ToD <- NULL
df$ToD <- mapply(calcToD_3, df$datetime, df$Latitude, df$Longitude)
df3 <- df
# works so let's make the 5 category function
calcToD_5 <- function(dt, lat, lon){
sun <- getSunlightTimes(date=as.Date(dt), lat=lat, lon=lon)
if (difftime(dt, sun$dawn, units='hours') > 20){
sun <- getSunlightTimes(date=as.Date(dt)+1, lat=lat, lon=lon)
}
if (as.numeric(difftime(dt, sun$dawn, units='hours')) <= 0 & as.numeric(difftime(dt, sun$dawn, units='hours')) >= -4){
ToD <- 1
} else if (as.numeric(difftime(dt, sun$dawn, units='hours')) >= 0 & as.numeric(difftime(dt, sun$dawn, units='hours')) <= 4){
ToD <- 2
} else if (as.numeric(difftime(dt, sun$solarNoon, units='hours')) >= -2 & as.numeric(difftime(dt, sun$solarNoon, units='hours')) <= 2){
ToD <- 3
} else if (as.numeric(difftime(dt, sun$dusk, units='hours')) >= -4 & as.numeric(difftime(dt, sun$dusk, units='hours')) <= 0){
ToD <- 4
} else if (as.numeric(difftime(dt, sun$dusk, units='hours')) <= 4 & as.numeric(difftime(dt, sun$dusk, units='hours')) >= 0){
ToD <- 5
} else {
ToD <- NA
}
return(ToD)
}
# run 5 category test
df$ToD <- NULL
df$ToD <- mapply(calcToD_5, df$datetime, df$Latitude, df$Longitude)
df5 <- df
# Visual check function
visual_check <- function(df, title){
localTime <- df$datetime.local
localTime <- force_tz(localTime, tzone='UTC')
localTime <- strftime(localTime, format="%H:%M:%S")
localTime <- as.POSIXct(localTime, format="%H:%M:%S")
plot(localTime, as.factor(df$ToD), col=as.factor(df$ToD), xlab="Time", ylab="ToD Category", main=title)
}
# run check
visual_check(df3, "3-categories")
visual_check(df5, "5-categories")
library(suncalc)
library(lubridate)
# setwd and load in dataset
setwd("~/Development/other_people_help/Katrin/sheep/more_categories")
load("heatwave1_na_ToD.RData")
# renaming dataframe for more readable code
df <- heatwave1_na
# removing uneeded columns
df$timeofday <- NULL
df <- head(df, 5000) # subset for testing
# works so let's make the 5 category function
calcToD_5 <- function(dt, lat, lon){
sun <- getSunlightTimes(date=as.Date(dt), lat=lat, lon=lon)
if (difftime(dt, sun$dawn, units='hours') > 21){
sun <- getSunlightTimes(date=as.Date(dt)+1, lat=lat, lon=lon)
}
if (as.numeric(difftime(dt, sun$dawn, units='hours')) <= 0 & as.numeric(difftime(dt, sun$dawn, units='hours')) >= -3){
ToD <- 1
} else if (as.numeric(difftime(dt, sun$dawn, units='hours')) >= 0 & as.numeric(difftime(dt, sun$dawn, units='hours')) <= 3){
ToD <- 2
} else if (as.numeric(difftime(dt, sun$solarNoon, units='hours')) >= -2 & as.numeric(difftime(dt, sun$solarNoon, units='hours')) <= 2){
ToD <- 3
} else if (as.numeric(difftime(dt, sun$dusk, units='hours')) >= -3 & as.numeric(difftime(dt, sun$dusk, units='hours')) <= 0){
ToD <- 4
} else if (as.numeric(difftime(dt, sun$dusk, units='hours')) <= 3 & as.numeric(difftime(dt, sun$dusk, units='hours')) >= 0){
ToD <- 5
} else {
ToD <- NA
}
return(ToD)
}
# run 5 category test
df$ToD <- NULL
df$ToD <- mapply(calcToD_5, df$datetime, df$Latitude, df$Longitude)
df5 <- df
# Visual check function
visual_check <- function(df, title){
localTime <- df$datetime.local
localTime <- force_tz(localTime, tzone='UTC')
localTime <- strftime(localTime, format="%H:%M:%S")
localTime <- as.POSIXct(localTime, format="%H:%M:%S")
plot(localTime, as.factor(df$ToD), col=as.factor(df$ToD), xlab="Time", ylab="ToD Category", main=title)
}
visual_check(df5, "5-categories")
# works so let's make the 5 category function
calcToD_5 <- function(dt, lat, lon){
sun <- getSunlightTimes(date=as.Date(dt), lat=lat, lon=lon)
if (difftime(dt, sun$dawn, units='hours') > 21){
sun <- getSunlightTimes(date=as.Date(dt)+1, lat=lat, lon=lon)
}
if (as.numeric(difftime(dt, sun$dawn, units='hours')) <= 0 & as.numeric(difftime(dt, sun$dawn, units='hours')) >= -3){
ToD <- 1
} else if (as.numeric(difftime(dt, sun$dawn, units='hours')) >= 0 & as.numeric(difftime(dt, sun$dawn, units='hours')) <= 3){
ToD <- 2
} else if (as.numeric(difftime(dt, sun$solarNoon, units='hours')) >= -1.5 & as.numeric(difftime(dt, sun$solarNoon, units='hours')) <= 1.5){
ToD <- 3
} else if (as.numeric(difftime(dt, sun$dusk, units='hours')) >= -3 & as.numeric(difftime(dt, sun$dusk, units='hours')) <= 0){
ToD <- 4
} else if (as.numeric(difftime(dt, sun$dusk, units='hours')) <= 3 & as.numeric(difftime(dt, sun$dusk, units='hours')) >= 0){
ToD <- 5
} else {
ToD <- NA
}
return(ToD)
}
# run 5 category test
df$ToD <- NULL
df$ToD <- mapply(calcToD_5, df$datetime, df$Latitude, df$Longitude)
df5 <- df
# Visual check function
visual_check <- function(df, title){
localTime <- df$datetime.local
localTime <- force_tz(localTime, tzone='UTC')
localTime <- strftime(localTime, format="%H:%M:%S")
localTime <- as.POSIXct(localTime, format="%H:%M:%S")
plot(localTime, as.factor(df$ToD), col=as.factor(df$ToD), xlab="Time", ylab="ToD Category", main=title)
}
visual_check(df5, "5-categories")
visual_check(df5, "5-categories (3 hour blocks")
visual_check(df5, "5-categories (3 hour blocks)")
